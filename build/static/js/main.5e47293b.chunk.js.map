{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","components/button.tsx","services/firebase.tsx","context/AuthContext.tsx","pages/NewRoom.tsx","assets/images/google-icon.svg","pages/Home.tsx","assets/images/copy.svg","components/RoomCode.tsx","components/Question.tsx","hooks/useRoom.ts","pages/Room.tsx","assets/images/delete.svg","assets/images/answer.svg","assets/images/check.svg","assets/images/access.svg","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["Button","isOutlined","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","e","console","log","auth","database","AuthContext","createContext","AuthProvider","children","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","NewRoom","newRoom","setNewRoom","useContext","history","useHistory","liveCode","setLiveCode","event","preventDefault","trim","roomRef","ref","push","title","authorId","url","firebaseRoom","key","src","ilustrationImg","alt","logoImage","onSubmit","type","onChange","target","placeholder","to","Home","roomCode","setRoomCode","get","exists","alert","val","endedAt","onClick","googleLogoIcon","RoomCode","navigator","clipboard","writeText","code","copyImg","Question","content","isAnswered","isHighlighted","cx","highlighted","answered","useRoom","roomId","questions","setQuestions","setTitle","setUrl","adminUser","setAdminUser","on","room","databaseRoom","firebaseQuestions","parsedQuestions","Object","entries","map","author","likeCount","values","likes","length","likeId","find","off","Room","params","useParams","newQuestion","setNewQuestion","question","questionId","remove","logoImg","width","height","split","setVideo","allowFullScreen","disabled","handlerLikeQuestion","aria-label","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","Date","window","confirm","handleEndRoom","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deletImg","accessImg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e47293b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.d836d165.svg\";","import { ButtonHTMLAttributes } from \"react\"\r\nimport '../styles/button.scss';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> &{\r\n    isOutlined?:boolean;\r\n};\r\n\r\nexport default function Button({isOutlined = false, ...props}: ButtonProps){\r\n    return(\r\n        <button \r\n        className={`button ${ isOutlined ? 'outlined' : '' }`}\r\n        {...props}>\r\n\r\n\r\n        </button>\r\n    )\r\n}","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n\r\n\r\ntry{\r\n  firebase.initializeApp(firebaseConfig)\r\n  \r\n}catch (e){\r\n  console.log(`Erro ${e}`)\r\n\r\n}\r\n\r\nconst auth = firebase.auth()\r\n\r\nconst database = firebase.database()\r\n\r\nexport {auth, database, firebase}","import React, { useEffect, useState } from 'react';\r\nimport { createContext, ReactNode } from \"react\";\r\n\r\nimport {auth, firebase} from '../services/firebase';\r\n\r\ntype authContextData ={\r\n    signInWithGoogle:() => Promise<void>;\r\n    user: userProps | undefined;\r\n    \r\n}\r\n\r\nexport const AuthContext = createContext({} as authContextData);\r\n\r\ntype authProviderProps = {\r\n    children: ReactNode;\r\n\r\n}\r\n\r\ntype userProps={\r\n    id:string;\r\n    name:string;\r\n    avatar:string;\r\n\r\n}\r\n\r\nexport function AuthProvider({children}:authProviderProps){\r\n    const [user, setUser] = useState<userProps | undefined>();\r\n\r\n    useEffect(()=>{\r\n        const unsubscribe = auth.onAuthStateChanged(user =>{\r\n            if(user){\r\n                const {displayName, photoURL, uid} = user\r\n                if (!displayName || !photoURL){\r\n                    throw new Error('Missing information from Google Account.');\r\n                }\r\n\r\n                setUser({\r\n                    id: uid,\r\n                    name: displayName,\r\n                    avatar: photoURL\r\n                })\r\n            }\r\n        })\r\n\r\n        return()=>{unsubscribe();}\r\n        \r\n      },[])\r\n\r\n    async function signInWithGoogle(){\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const result = await auth.signInWithPopup(provider)\r\n\r\n        if(result.user){\r\n            const {displayName, photoURL, uid} = result.user\r\n            if (!displayName || !photoURL){\r\n                throw new Error('Missing information from Google Account.');\r\n            }\r\n\r\n            setUser({\r\n                id: uid,\r\n                name: displayName,\r\n                avatar: photoURL\r\n            })\r\n        }       \r\n    }\r\n\r\n\r\nreturn(\r\n    <AuthContext.Provider value={{\r\n        signInWithGoogle,\r\n        user\r\n       \r\n    }}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n    )\r\n}","import ilustrationImg from '../assets/images/illustration.svg'\r\nimport logoImage from '../assets/images/logo.svg'\r\nimport '../styles/auth.scss'\r\nimport Button from '../components/button'\r\nimport {FormEvent, useContext, useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { database } from '../services/firebase';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function NewRoom(){\r\n    const [newRoom, setNewRoom] = useState<string>('')\r\n    const {user} = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const [liveCode, setLiveCode] = useState<string>('')\r\n\r\n    async function handleCreateRoom(event:FormEvent){\r\n        event.preventDefault()\r\n        if (newRoom.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        const roomRef = database.ref('rooms')\r\n        const firebaseRoom = await roomRef.push({\r\n            title: newRoom,\r\n            authorId:user?.id,\r\n            url:liveCode\r\n        })\r\n\r\n        history.push(`/rooms/admin/${firebaseRoom.key}`)\r\n    }\r\n\r\n    return(\r\n    <div id='page-auth'>\r\n        <aside>\r\n            <img src={ilustrationImg} alt=\"Ilustração\" />\r\n            <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n            <p>Tire as dúvidas da sua audiência em tempo real.</p>\r\n        </aside>\r\n        <main>\r\n            <div className='main-content'>\r\n                <img src={logoImage} alt=\"LetmeAsk\" />\r\n                <h2>Crie uma nova sala.</h2>\r\n                <form onSubmit={handleCreateRoom}>\r\n\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"\" \r\n                        id=\"\" \r\n                        onChange={event => setNewRoom(event.target.value)}\r\n                        value={newRoom}\r\n                        placeholder='Nome da sala.'\r\n                    />\r\n\r\n                    <input\r\n                        value={liveCode}\r\n                        onChange={event => setLiveCode(event.target.value)}\r\n                        type=\"text\" \r\n                        name=\"\" \r\n                        id=\"\" \r\n                        placeholder='Linke da sua live (opcional).'\r\n                    />\r\n\r\n                    <Button type='submit'>Entrar na sala</Button>\r\n                </form>\r\n                <p>Quer entrar em alguma sala? <Link to='/'>click aqui.</Link></p>\r\n            </div>\r\n        </main>\r\n\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import ilustrationImg from '../assets/images/illustration.svg'\r\nimport logoImage from '../assets/images/logo.svg'\r\nimport googleLogoIcon from '../assets/images/google-icon.svg' \r\nimport '../styles/auth.scss'\r\nimport Button from '../components/button'\r\n\r\nimport {useHistory} from 'react-router-dom'\r\nimport { FormEvent, useContext, useState } from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { database } from '../services/firebase'\r\n\r\nexport default function Home(){\r\n\r\n    const {signInWithGoogle,user} = useContext(AuthContext);\r\n    const history = useHistory()\r\n    const [roomCode, setRoomCode] = useState<string>('')\r\n\r\n\r\n\r\n    async function handleCreateRoom(){\r\n        if(!user){\r\n            await signInWithGoogle()\r\n        }\r\n        \r\n        history.push('/rooms/new')\r\n    }\r\n\r\n    async function handleJoinRoom(event: FormEvent){\r\n        event.preventDefault()\r\n\r\n        if (roomCode.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        const roomRef = await database.ref(`rooms/${roomCode}`).get();\r\n\r\n        if(!roomRef.exists()){\r\n            alert('Room does not exists.');\r\n            return;\r\n        }\r\n\r\n        if(roomRef.val().endedAt){\r\n            alert('Essa sala foi encerrada!');\r\n            return;\r\n        }\r\n\r\n        history.push(`/rooms/${roomCode}`);\r\n    }\r\n\r\n\r\n    return(\r\n    <div id='page-auth'>\r\n        <aside>\r\n            <img src={ilustrationImg} alt=\"Ilustração\" />\r\n            <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n            <p>Tire as dúvidas da sua audiência em tempo real.</p>\r\n        </aside>\r\n        <main>\r\n            <div className='main-content'>\r\n                <img src={logoImage} alt=\"LetmeAsk\" />\r\n                <button onClick={handleCreateRoom} className='create-room'>\r\n                    <img src={googleLogoIcon} alt=\"Logo google\" />\r\n                    Crie sua sala com o google\r\n                </button>\r\n                <div className='separator'>ou entre em uma sala</div>\r\n                <form onSubmit={handleJoinRoom}>\r\n                    <input\r\n                        value={roomCode}\r\n                        onChange={event => setRoomCode(event.target.value)}\r\n                        type=\"text\" \r\n                        name=\"\" \r\n                        id=\"\" \r\n                        placeholder='Digite o codigo da sala'\r\n                    />\r\n    \r\n                    <Button type='submit'>Entrar na sala</Button>\r\n                </form>\r\n            </div>\r\n        </main>\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import copyImg from '../assets/images/copy.svg'\r\nimport '../styles/roomCode.scss'\r\n\r\ntype RoomCodeProps ={\r\n    code:string;\r\n}\r\n\r\nexport default function RoomCode(props:RoomCodeProps){\r\n\r\n    function copyRoomCodeToClipboard(){\r\n        navigator.clipboard.writeText(props.code)\r\n    }\r\n    return(\r\n        <button onClick={copyRoomCodeToClipboard} className='room-code'>\r\n            <div>\r\n                <img src={copyImg} alt=\"Copy room code\" />\r\n            </div>\r\n            <span>Sala: #{props.code}</span>\r\n        </button>\r\n    )\r\n}","import { ReactNode } from 'react';\r\nimport '../styles/question.scss';\r\nimport cx from 'classnames';\r\n\r\ntype QuestionProps ={\r\n    content:string;\r\n    auth:{\r\n        name:string;\r\n        avatar:string;\r\n    }\r\n    children?:ReactNode;\r\n    isAnswered?:boolean;\r\n    isHighlighted?:boolean;\r\n}\r\n\r\nexport default function Question({\r\n    content,\r\n    auth,\r\n    isAnswered = false,\r\n    isHighlighted = false,\r\n    children,\r\n}:QuestionProps){\r\n\r\n    return(\r\n        <div className={\r\n            cx('question', \r\n            {highlighted: isHighlighted},\r\n            {answered: isAnswered})\r\n        }>\r\n            <p>{content}</p>\r\n            <footer>\r\n                <div className='user-info'>\r\n                    <img src={auth.avatar} alt={auth.name} />\r\n                    <span>{auth.name}</span>\r\n                </div>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { database } from \"../services/firebase\"\r\n\r\ntype FirebaseQuestionsProps = Record<string , {\r\n    author:{\r\n        name:string;\r\n        avatar:string\r\n    }\r\n    content:string;\r\n    isAnswered?:boolean;\r\n    isHighlighted?:boolean;\r\n    likes: Record<string, {\r\n        authorId:string;\r\n    }>\r\n    \r\n}>\r\n\r\ntype QuestionProps={\r\n    id:string;\r\n    author:{\r\n        name:string;\r\n        avatar:string\r\n    }\r\n    content:string;\r\n    isAnswered?:boolean;\r\n    isHighlighted?:boolean;\r\n    likeCount:number;\r\n    likeId:string | undefined;\r\n\r\n}\r\n\r\nexport default function useRoom(roomId:string){\r\n    const {user} = useContext(AuthContext);\r\n    const [questions, setQuestions] = useState<QuestionProps[]>([]);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [url, setUrl] = useState<string>('');\r\n    const [adminUser, setAdminUser] = useState<string>('');\r\n    \r\n\r\n    useEffect(()=>{\r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n        \r\n        roomRef.on('value', room =>{\r\n            const databaseRoom = room.val()\r\n            const firebaseQuestions: FirebaseQuestionsProps = databaseRoom.questions ?? {}\r\n            const parsedQuestions = Object.entries(firebaseQuestions).map(([key,value])=>{\r\n                return{\r\n                    id: key,\r\n                    content: value.content,\r\n                    author:value.author,\r\n                    isHighlighted: value.isHighlighted,\r\n                    isAnswered: value.isAnswered,\r\n                    likeCount: Object.values(value.likes ?? {}).length,\r\n                    likeId: Object.entries(value.likes ?? {}).find(([key,like]) => like.authorId === user?.id)?.[0]\r\n                }\r\n            })\r\n            setUrl(databaseRoom.url)\r\n            setTitle(databaseRoom.title);\r\n            setQuestions(parsedQuestions);\r\n            setAdminUser(databaseRoom.authorId)\r\n            \r\n        })\r\n\r\n        return()=>{\r\n            roomRef.off('value');\r\n        }\r\n    },[roomId, user?.id])\r\n\r\n\r\n    return{questions, title, url, adminUser}\r\n}","import { FormEvent, useContext, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport Button from '../components/button';\r\nimport RoomCode from '../components/RoomCode';\r\nimport Question from '../components/Question';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { database } from '../services/firebase';\r\nimport '../styles/room.scss';\r\nimport useRoom from '../hooks/useRoom';\r\n\r\n\r\ntype RoomParamsProps ={\r\n    id:string;\r\n}\r\n\r\nexport default function Room(){\r\n    const {user, signInWithGoogle} = useContext(AuthContext);\r\n    const params = useParams<RoomParamsProps>()\r\n    const [newQuestion, setNewQuestion] = useState<string>('')\r\n    const {questions, title, url} = useRoom(params.id)\r\n    const history = useHistory()\r\n\r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault()\r\n\r\n        if (newQuestion.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        if(!user){\r\n            throw new Error('You mus be logged in')\r\n        }\r\n        const question ={\r\n            content: newQuestion,\r\n            author:{\r\n                id: user.id,\r\n                name:user.name, \r\n                avatar:user.avatar,\r\n\r\n            },\r\n            isHighlighted: false,\r\n            isAnswered: false\r\n        }\r\n\r\n        await database.ref(`/rooms/${params.id}/questions`).push(question)\r\n        setNewQuestion('')\r\n    }\r\n    \r\n    async function handlerLikeQuestion(questionId:string, likeId:string | undefined){\r\n\r\n        if(likeId){\r\n            await database.ref(`rooms/${params.id}/questions/${questionId}/likes/${likeId}`).remove()\r\n\r\n        }else{\r\n            await database.ref(`rooms/${params.id}/questions/${questionId}/likes`).push({\r\n                authorId:user?.id,\r\n            })\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    function setVideo(){\r\n        return url.split('/')?.[3];\r\n\r\n    }\r\n    \r\n    return(\r\n        <div id='page-room'>\r\n            \r\n            <header>\r\n                <div className='content'>\r\n                    <img onClick={()=>history.push('/')} src={logoImg} alt=\"Letmeask\"/>\r\n                    <RoomCode code={params.id}/>\r\n                </div>\r\n            </header>\r\n\r\n            {url &&\r\n            <section className='video'>\r\n                <iframe title='video' width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${setVideo()}`} allowFullScreen={true}/>\r\n            </section>\r\n            }\r\n\r\n            <main>\r\n                <div className='room-title'>\r\n                    <h1>Sala {title}</h1>\r\n                    {questions.length>0 && (<span>{questions.length} perguntas</span>)}\r\n                    \r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea onChange={event => setNewQuestion(event.target.value)} value={newQuestion} placeholder='Q que você quer perguntar?'/>\r\n\r\n                    <div className='form-footer'>\r\n                        {user ? \r\n                            (<div className='user-info'>\r\n\r\n                                <img src={user.avatar} alt={user.name} />\r\n                                <span>{user.name}</span>\r\n\r\n                            </div>\r\n                        ):(\r\n                            <span>Para enviar uma pergunta <button onClick={signInWithGoogle}>faça seu login</button>.</span>\r\n                        )}\r\n                        <Button disabled={!user} type='submit'>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"question-list\">\r\n                    {\r\n                        questions.map(question=>{\r\n                            return (\r\n                                <Question \r\n                                key={question.id}\r\n                                auth={question.author} \r\n                                content={question.content}\r\n                                isAnswered={question.isAnswered}\r\n                                isHighlighted={question.isHighlighted}\r\n                                >\r\n                                    \r\n                                { !question.isAnswered &&\r\n                                    \r\n                                    <button \r\n                                    onClick={()=>handlerLikeQuestion(question.id, question.likeId)}\r\n                                    className={`like-button ${question.likeId ? 'liked':''}`}\r\n                                    type='button'\r\n                                    aria-label='Marcar como gostei'\r\n                                    >\r\n                                        {question.likeCount>0 && <span>{question.likeCount}</span>}\r\n                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n                                            <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n\r\n                                    </button>\r\n                                    \r\n                                    }\r\n\r\n                                </Question>\r\n                            )\r\n                        })\r\n                    }\r\n                </div> \r\n            </main>\r\n            \r\n        </div>)\r\n}","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/access.13f6257b.svg\";","\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deletImg from '../assets/images/delete.svg';\r\nimport answerImg from '../assets/images/answer.svg';\r\nimport checkImg from '../assets/images/check.svg';\r\n\r\nimport Button from '../components/button';\r\nimport RoomCode from '../components/RoomCode';\r\nimport Question from '../components/Question';\r\n\r\nimport '../styles/room.scss';\r\nimport useRoom from '../hooks/useRoom';\r\nimport {database} from '../services/firebase';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nimport accessImg from '../assets/images/access.svg';\r\n\r\n\r\n\r\ntype RoomParamsProps = {\r\n    id:string;\r\n}\r\n\r\nexport default function AdminRoom(){\r\n    const params = useParams<RoomParamsProps>()\r\n    const {questions, title, adminUser} = useRoom(params.id)\r\n    const history = useHistory();\r\n    const {user, signInWithGoogle} = useContext(AuthContext);\r\n\r\n\r\n    async function handleEndRoom(){\r\n        await database.ref(`rooms/${params.id}`).update({\r\n            endedAt: new Date(),\r\n        })\r\n\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    async function handleDeleteQuestion(questionId:string){\r\n        if(window.confirm('Tem certeza que você deseja excluir essa pergunta?')){\r\n            await database.ref(`rooms/${params.id}/questions/${questionId}`).remove()\r\n        }\r\n    }\r\n\r\n    async function handleCheckQuestionAsAnswered(questionId:string){\r\n        await database.ref(`rooms/${params.id}/questions/${questionId}`).update({\r\n            isAnswered:true\r\n        })\r\n    }\r\n\r\n    async function handleHighlightQuestion(questionId:string) {\r\n        await database.ref(`rooms/${params.id}/questions/${questionId}`).update({\r\n            isHighlighted:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    return(\r\n        <div id='page-room'>\r\n            {(user?.id === adminUser)? ( \r\n\r\n            <>\r\n                <header>\r\n                    <div className='content'>\r\n                        <img src={logoImg} onClick={()=>history.push('/')} alt=\"Letmeask\"/>\r\n                        <div>\r\n                            <RoomCode code={params.id}/>\r\n                            <Button onClick={()=>handleEndRoom()} isOutlined >Encerrar sala</Button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n                <main>\r\n                    <div className='room-title'>\r\n                        <h1>Sala {title}</h1>\r\n                        {questions.length>0 && (<span>{questions.length} perguntas</span>)}\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"question-list\">\r\n                        {\r\n                            questions.map(question=>{\r\n                                return (\r\n                                    <Question \r\n                                    isAnswered={question.isAnswered}\r\n                                    isHighlighted={question.isHighlighted}\r\n                                    key={question.id}\r\n                                    auth={question.author} \r\n                                    content={question.content}>\r\n\r\n                                        { !question.isAnswered &&\r\n                    \r\n                                        <>\r\n                                            <button\r\n                                                type='button'\r\n                                                onClick={()=>{handleCheckQuestionAsAnswered(question.id)}}\r\n                                            >\r\n                                            <img src={checkImg} alt=\"Marcar como respondida.\" />\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                type='button'\r\n                                                onClick={()=>{handleHighlightQuestion(question.id)}}\r\n                                            >\r\n                                                <img src={answerImg} alt=\"Dar destaque na pergunta..\" />\r\n                                            </button>\r\n                                        </>\r\n                                        }\r\n\r\n                                        \r\n                                        <button\r\n                                            type='button'\r\n                                            onClick={()=>{handleDeleteQuestion(question.id)}}\r\n                                        >\r\n                                            <img src={deletImg} alt=\"Deletar pergunta.\" />\r\n                                        </button>\r\n\r\n                                    </Question>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div> \r\n                </main>\r\n            </>):(\r\n\r\n                <div onClick={signInWithGoogle} className='accessDenied'>\r\n                    <img src={accessImg} alt=\"Acesso não permitido.\"/>\r\n                    <span>Faça login para continuar.</span>\r\n                </div>\r\n            )}\r\n        </div>)\r\n}","import NewRoom from './pages/NewRoom';\nimport Home from './pages/Home';\nimport Room from './pages/Room';\n\n\n\nimport './services/firebase';\nimport './styles/global.scss';\n\nimport {BrowserRouter,Route, Switch} from 'react-router-dom';\nimport {AuthProvider} from './context/AuthContext'\nimport AdminRoom from './pages/AdminRoom';\n\n\n\nfunction App() {\n  \n\n  return (\n    <div>\n      <AuthProvider>\n        <BrowserRouter>\n          <Switch>\n            <Route path='/' exact component={Home}/>\n            <Route path='/rooms/new' exact  component={NewRoom}/>\n            <Route path='/rooms/:id'  component={Room}/>\n            <Route path='/admin/rooms/:id'  component={AdminRoom}/>\n          </Switch>\n        </BrowserRouter>\n      </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}